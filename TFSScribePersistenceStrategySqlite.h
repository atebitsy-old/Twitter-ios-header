//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TFSScribe/TFSScribePersistenceStrategy-Protocol.h>

@class NSString, TFSDatabase, TFSScribe, TFSScribeConfiguration, TFSScribeDatabaseLog;
@protocol OS_dispatch_queue, TFSScribeErrorDelegate;

@interface TFSScribePersistenceStrategySqlite : NSObject <TFSScribePersistenceStrategy>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_openQueue;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSString *_sqlitePath;
    // Error parsing type: AB, name: _isOpen
    TFSDatabase *_db;
    TFSScribeDatabaseLog *_log;
    TFSScribeConfiguration *_config;
    double _shelfLife;
    _Bool _debugEnabled;
    id <TFSScribeErrorDelegate> _errorDelegate;
    TFSScribe *_scribe;
}

+ (id)_expectedColumnsForTable:(id)arg1;
+ (id)_expectedSqliteSequenceTableColumns;
+ (id)_expectedSqliteImpressionTableColumns;
+ (id)_expectedSqliteEventTableColumns;
+ (id)_createSqliteSequenceTableString;
+ (id)_createSqliteImpressionTableString;
+ (id)_createSqliteEventTableString;
- (void).cxx_destruct;
@property(nonatomic) __weak TFSScribe *scribe; // @synthesize scribe=_scribe;
@property(readonly, nonatomic) __weak id <TFSScribeErrorDelegate> errorDelegate; // @synthesize errorDelegate=_errorDelegate;
@property _Bool debugEnabled; // @synthesize debugEnabled=_debugEnabled;
- (id)_argListString:(id)arg1;
- (void)_handleScribeError:(id)arg1 message:(id)arg2;
- (void)_handleScribeErrorWithMessage:(id)arg1;
- (_Bool)_performDbTransaction:(CDUnknownBlockType)arg1 errorMessage:(id)arg2;
- (void)_executeLoopedDbUpdate:(id)arg1 args:(id)arg2 numBindings:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_executeLoopedDbUpdate:(id)arg1 args:(id)arg2 numBindings:(unsigned long long)arg3;
- (void)_executeDbUpdate:(id)arg1 args:(id)arg2;
- (void)_executeDbUpdate:(id)arg1;
- (void)clearScribeDatabase;
- (id)_tableColumns:(id)arg1;
- (_Bool)_doesTable:(id)arg1 haveExactColumns:(id)arg2;
- (_Bool)_isRecognizedSqliteDb;
- (_Bool)_setupSequenceTable;
- (_Bool)_setupSqliteTables;
- (_Bool)_dropTables;
- (id)_allNonReservedTableNames:(id)arg1;
- (_Bool)_isReservedSqliteTable:(id)arg1;
- (_Bool)_deleteStaleEventsAndImpressions;
- (_Bool)_resetOutgoingRequestStatus;
- (_Bool)_deleteMaximumRetryCountEvents;
- (_Bool)_setupSqlite;
- (void)_deleteSequencesForGroups:(id)arg1;
- (void)_deleteImpressionsForGroups:(id)arg1;
- (void)_deleteEventsForGroups:(id)arg1;
- (void)deleteGroups:(id)arg1;
- (void)_setSequenceTimestampAndNumberForSerializer:(id)arg1;
- (id)_eventParametersForEvents:(id)arg1 token:(id)arg2;
- (void)_didFlushEvents:(id)arg1 behavior:(unsigned long long)arg2;
- (id)_flushEventsWithGroups:(id)arg1 fetchLimit:(unsigned long long)arg2;
- (void)_batchImpressionsForGroups:(id)arg1 requestHandler:(id)arg2;
- (void)flushGroups:(id)arg1 token:(id)arg2 fetchLimit:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 eventsHandler:(id)arg5 impressionsHandler:(id)arg6;
- (void)_enqueueImpression:(id)arg1 eventName:(id)arg2 query:(id)arg3 timestamp:(id)arg4 group:(id)arg5;
- (void)enqueueImpression:(id)arg1 eventName:(id)arg2 query:(id)arg3 group:(id)arg4 timestamp:(id)arg5;
- (void)_enqueueEvents:(id)arg1 timestamp:(id)arg2;
- (void)enqueueEvent:(id)arg1 timestamp:(id)arg2;
- (void)enqueueCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)isOpen;
- (void)closeWithStartBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)openWithStartBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1 scribe:(id)arg2 errorDelegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

